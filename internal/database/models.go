// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package database

import (
	"database/sql"
	"database/sql/driver"
	"encoding/json"
	"fmt"
)

type PermissionAction string

const (
	PermissionActionValue0 PermissionAction = "*"
	PermissionActionRead   PermissionAction = "read"
	PermissionActionCreate PermissionAction = "create"
	PermissionActionUpdate PermissionAction = "update"
	PermissionActionDelete PermissionAction = "delete"
)

func (e *PermissionAction) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PermissionAction(s)
	case string:
		*e = PermissionAction(s)
	default:
		return fmt.Errorf("unsupported scan type for PermissionAction: %T", src)
	}
	return nil
}

type NullPermissionAction struct {
	PermissionAction PermissionAction
	Valid            bool // Valid is true if PermissionAction is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullPermissionAction) Scan(value interface{}) error {
	if value == nil {
		ns.PermissionAction, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.PermissionAction.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullPermissionAction) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.PermissionAction), nil
}

type Permission struct {
	ID        int32
	CreatedAt sql.NullTime
	UpdatedAt sql.NullTime
	Resource  sql.NullString
	Resources json.RawMessage
	Role      string
	Action    NullPermissionAction
}

type Role struct {
	ID        int32
	CreatedAt sql.NullTime
	UpdatedAt sql.NullTime
	Name      sql.NullString
	Code      string
}

type User struct {
	ID        int32
	CreatedAt sql.NullTime
	UpdatedAt sql.NullTime
	Username  string
	Name      string
	Password  string
	Email     string
}
